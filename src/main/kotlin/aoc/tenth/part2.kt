package aoc.tenth

import aoc.util.InputReader


fun main() {
    val values = mapOf(
        ".#..#\n" +
                ".....\n" +
                "#####\n" +
                "....#\n" +
                "...##" to Pair(8, Pair(3, 4)),

        ".#..##.###...#######\n" +
                "##.############..##.\n" +
                ".#.######.########.#\n" +
                ".###.#######.####.#.\n" +
                "#####.##.#.##.###.##\n" +
                "..#####..#.#########\n" +
                "####################\n" +
                "#.####....###.#.#.##\n" +
                "##.#################\n" +
                "#####.##.###..####..\n" +
                "..######..##.#######\n" +
                "####.##.####...##..#\n" +
                ".#####..#.######.###\n" +
                "##...#.##########...\n" +
                "#.##########.#######\n" +
                ".####.#.###.###.#.##\n" +
                "....##.##.###..#####\n" +
                ".#.#.###########.###\n" +
                "#.#.#.#####.####.###\n" +
                "###.##.####.##.#..##" to Pair(210, Pair(11, 13))
    )

    values
        .map { Pair(solve2(it.key.trim()), it.value) }
        .forEach { println("${it.first} ==> ${it.second}   => ${it.first == it.second.toString()}") }

     println(solve2(InputReader().testCase(10)))

}
